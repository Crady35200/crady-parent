<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crady.mapper.UserMapper">
<!--  <cache/>-->
  <resultMap id="BaseResultMap" type="com.crady.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="CHAR" property="sex" />
  </resultMap>

  <!--嵌套结果查询(1:1)-->
  <resultMap id="userAccountMap1" type="com.crady.entity.UserEntity" extends="BaseResultMap">
    <!-- 此处也可以不是使用 javaType而使用 resultMap="com.crady.mapper.UserAccountMapper.BaseResultMap"代替-->
    <association property="userAccountEntity" javaType="com.crady.entity.UserAccountEntity" columnPrefix="ac_">
      <id column="id" property="id"/>
      <result column="user_id" property="userId"/>
      <result column="account_no" property="accountNo"/>
      <result column="crt_time" property="crtTime"/>
      <result column="upd_time" property="updTime"/>
    </association>
  </resultMap>

  <!--嵌套sql查询(1:1)-->
  <resultMap id="userAccountMap2" type="com.crady.entity.UserEntity" extends="BaseResultMap">
    <association property="userAccountEntity" column="id" fetchType="lazy"
                 select="com.crady.mapper.UserAccountMapper.selectByUserId"/>
  </resultMap>

  <!--嵌套结果查询(1:N)-->
  <resultMap id="userJobMap1" type="com.crady.entity.UserEntity" extends="BaseResultMap">
    <collection property="jobEntities" ofType="com.crady.entity.JobEntity" columnPrefix="job_">
      <id property="id" column="id"/>
      <result property="companyName" column="company_name"/>
      <result property="startTime" column="start_time"/>
      <result property="endTime" column="end_time"/>
      <result property="userId" column="user_id"/>
    </collection>
  </resultMap>

  <!--嵌套sql查询(1:N)-->
  <resultMap id="userJobMap2" type="com.crady.entity.UserEntity" extends="BaseResultMap">
    <collection property="jobEntities" column="id" fetchType="lazy"
                select="com.crady.mapper.JobMapper.selectByUserId"/>
  </resultMap>
  
  <!--鉴别器-->
  <resultMap id="userHealthMap" type="com.crady.entity.UserEntity">
    <discriminator column="sex" javaType="int">
      <case value="0" resultMap="userHealthFeMaleMap"/>
      <case value="1" resultMap="userHealthMaleMap"/>
    </discriminator>
  </resultMap>
  
  <resultMap id="userHealthMaleMap" type="com.crady.entity.UserEntity">
    <collection property="baseEntity" column="id" select="com.crady.mapper.HealthMaleMapper.selectByUserId"/>
  </resultMap>
  <resultMap id="userHealthFeMaleMap" type="com.crady.entity.UserEntity">
    <collection property="baseEntity" column="id" select="com.crady.mapper.HealthFemaleMapper.selectByUserId"/>
  </resultMap>


  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, password, age, sex
  </sql>

<!--simple query-->
  <!-- flushCache="true" 可以禁用一级缓存-->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
  </select>
  
  <select id="selectByIdList" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from t_user
  <where>
    id in
    <foreach collection="list" separator="," open="(" close=")" item="id">
      #{id}
    </foreach>
  </where>
</select>

  <select id="selectByIdArray" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    <where>
      id in
      <foreach collection="array" separator="," open="(" close=")" item="id">
        #{id}
      </foreach>
    </where>
  </select>

  <select id="selectChooseDemo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    <where>
      <choose>
        <when test="name != null and name != ''">
          name = #{name}
        </when>
        <when test="age != null and name != ''">
          age = #{age}
        </when>
        <otherwise>
          1 = 1
        </otherwise>
      </choose>
    </where>
  </select>

  <!--complex query-->
  <!--嵌套结果查询(1:1)-->
  <select id="selectUserAccount1" resultMap="userAccountMap1">
    select
    a.id,a.name,a.password,a.age,a.sex,
    b.id ac_id,b.user_id ac_user_id,b.account_no ac_account_no,
    b.crt_time ac_crt_time,b.upd_time ac_upd_time
    from t_user a ,t_user_account b where a.id = b.user_id
    <if test="id != null and id != ''">
      and a.id = #{id}
    </if>
    <if test="name != null and name != ''">
      and a.name = #{name}
    </if>
  </select>
  <!--嵌套sql查询(1:1)-->
  <select id="selectUserAccount2" resultMap="userAccountMap2">
    select
    a.id,a.name,a.password,a.age,a.sex
    from t_user a
    <where>
      a.id in
      <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
    </where>
  </select>

  <!--嵌套结果查询(1:N)-->
  <select id="selectUserJob1" resultMap="userJobMap1">
    select
    a.id,a.name,a.password,a.age,a.sex,
    b.id job_id,b.company_name job_company_name,b.start_time job_start_time,b.end_time job_end_time,
    b.user_id job_user_id
    from t_user a ,t_job b where a.id = b.user_id and a.id = #{id}

  </select>
  <!--嵌套sql查询(1:N)-->
  <select id="selectUserJob2" resultMap="userJobMap2">
    select
    a.id,a.name,a.password,a.age,a.sex
    from t_user a
    <where>
      a.id in
      <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
    </where>
  </select>

  <!--嵌套sql查询(1:1)-->
  <select id="selectUserHealth" resultMap="userHealthMap">
    select
    a.id,a.name,a.password,a.age,a.sex
    from t_user a
    <where>
      a.id in
      <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
    </where>
  </select>

  <insert id="insertSelectiveGetId" parameterType="com.crady.entity.UserEntity" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertBatchGetId" useGeneratedKeys="true" keyProperty="id">
    insert into t_user(id,name,password,age,sex) values
      <foreach collection="list" item="user" separator=",">
        (
          #{user.id,jdbcType=INTEGER},
          #{user.name,jdbcType=VARCHAR},
          #{user.password,jdbcType=VARCHAR},
          #{user.age,jdbcType=INTEGER},
          #{user.sex,jdbcType=CHAR}
        )
      </foreach>
  </insert>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crady.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_user (id, name, password, 
      age, sex)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crady.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crady.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crady.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>